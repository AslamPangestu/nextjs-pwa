{"ast":null,"code":"/* istanbul ignore next */\nimport Router from \"next/router\";\nimport cookie from \"cookie\";\nimport cookies from \"js-cookie\";\nvar Token = {\n  ajaxHandler: function ajaxHandler(type, e) {\n    return {\n      type: type,\n      error: e.message\n    };\n  },\n  logout: function logout() {\n    cookies.remove(\"token\");\n    Router.replace(\"/\");\n  },\n  loggedIn: function loggedIn() {\n    Router.replace(\"/markup\");\n  },\n  getStoredToken: function getStoredToken(req) {\n    if (req) {\n      var parsedCookies = cookie.parse(req.headers.cookie || \"\");\n      return parsedCookies && parsedCookies.token;\n    }\n\n    cookies.get(\"token\");\n  },\n  getStoredLocale: function getStoredLocale(req) {\n    if (req) {\n      // Attempt to get locale saved cookie\n      var parsedCookies = cookie.parse(req.headers.cookie || \"\");\n\n      if (parsedCookies.locale) {\n        return parsedCookies.locale;\n      } // Attempt to retrieve local from Accept-Language headers\n\n\n      if (req.headers && req.headers[\"accept-language\"]) {\n        var parsedLocale = req.headers[\"accept-language\"].split(\",\")[0];\n\n        if (parsedLocale) {\n          return parsedLocale;\n        }\n      }\n    }\n\n    return Constants.defaultLocale;\n  },\n  setStoredLocale: function setStoredLocale(v) {\n    return cookies.set(\"locale\", v);\n  },\n  setStoredToken: function setStoredToken(v) {\n    return cookies.set(\"token\", v);\n  }\n}; // global.Token = Token;\n\nexport default Token;","map":{"version":3,"sources":["/home/mvryan/Documents/PWA/next-pwa/utils/token.js"],"names":["Router","cookie","cookies","Token","ajaxHandler","type","e","error","message","logout","remove","replace","loggedIn","getStoredToken","req","parsedCookies","parse","headers","token","get","getStoredLocale","locale","parsedLocale","split","Constants","defaultLocale","setStoredLocale","v","set","setStoredToken"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,WADY,uBACAC,IADA,EACMC,CADN,EACS;AACnB,WAAO;AAAED,MAAAA,IAAI,EAAJA,IAAF;AAAQE,MAAAA,KAAK,EAAED,CAAC,CAACE;AAAjB,KAAP;AACD,GAHW;AAIZC,EAAAA,MAJY,oBAIH;AACPP,IAAAA,OAAO,CAACQ,MAAR,CAAe,OAAf;AACAV,IAAAA,MAAM,CAACW,OAAP,CAAe,GAAf;AACD,GAPW;AAQZC,EAAAA,QARY,sBAQD;AACTZ,IAAAA,MAAM,CAACW,OAAP,CAAe,SAAf;AACD,GAVW;AAWZE,EAAAA,cAXY,0BAWGC,GAXH,EAWQ;AAClB,QAAIA,GAAJ,EAAS;AACP,UAAMC,aAAa,GAAGd,MAAM,CAACe,KAAP,CAAaF,GAAG,CAACG,OAAJ,CAAYhB,MAAZ,IAAsB,EAAnC,CAAtB;AACA,aAAOc,aAAa,IAAIA,aAAa,CAACG,KAAtC;AACD;;AACDhB,IAAAA,OAAO,CAACiB,GAAR,CAAY,OAAZ;AACD,GAjBW;AAkBZC,EAAAA,eAlBY,2BAkBIN,GAlBJ,EAkBS;AACnB,QAAIA,GAAJ,EAAS;AACP;AACA,UAAMC,aAAa,GAAGd,MAAM,CAACe,KAAP,CAAaF,GAAG,CAACG,OAAJ,CAAYhB,MAAZ,IAAsB,EAAnC,CAAtB;;AACA,UAAIc,aAAa,CAACM,MAAlB,EAA0B;AACxB,eAAON,aAAa,CAACM,MAArB;AACD,OALM,CAMP;;;AACA,UAAIP,GAAG,CAACG,OAAJ,IAAeH,GAAG,CAACG,OAAJ,CAAY,iBAAZ,CAAnB,EAAmD;AACjD,YAAMK,YAAY,GAAGR,GAAG,CAACG,OAAJ,CAAY,iBAAZ,EAA+BM,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAArB;;AACA,YAAID,YAAJ,EAAkB;AAChB,iBAAOA,YAAP;AACD;AACF;AACF;;AAED,WAAOE,SAAS,CAACC,aAAjB;AACD,GAnCW;AAoCZC,EAAAA,eApCY,2BAoCIC,CApCJ,EAoCO;AACjB,WAAOzB,OAAO,CAAC0B,GAAR,CAAY,QAAZ,EAAsBD,CAAtB,CAAP;AACD,GAtCW;AAuCZE,EAAAA,cAvCY,0BAuCGF,CAvCH,EAuCM;AAChB,WAAOzB,OAAO,CAAC0B,GAAR,CAAY,OAAZ,EAAqBD,CAArB,CAAP;AACD;AAzCW,CAAd,C,CA4CA;;AACA,eAAexB,KAAf","sourcesContent":["/* istanbul ignore next */\nimport Router from \"next/router\";\nimport cookie from \"cookie\";\nimport cookies from \"js-cookie\";\n\nconst Token = {\n  ajaxHandler(type, e) {\n    return { type, error: e.message };\n  },\n  logout() {\n    cookies.remove(\"token\");\n    Router.replace(\"/\");\n  },\n  loggedIn() {\n    Router.replace(\"/markup\");\n  },\n  getStoredToken(req) {\n    if (req) {\n      const parsedCookies = cookie.parse(req.headers.cookie || \"\");\n      return parsedCookies && parsedCookies.token;\n    }\n    cookies.get(\"token\");\n  },\n  getStoredLocale(req) {\n    if (req) {\n      // Attempt to get locale saved cookie\n      const parsedCookies = cookie.parse(req.headers.cookie || \"\");\n      if (parsedCookies.locale) {\n        return parsedCookies.locale;\n      }\n      // Attempt to retrieve local from Accept-Language headers\n      if (req.headers && req.headers[\"accept-language\"]) {\n        const parsedLocale = req.headers[\"accept-language\"].split(\",\")[0];\n        if (parsedLocale) {\n          return parsedLocale;\n        }\n      }\n    }\n\n    return Constants.defaultLocale;\n  },\n  setStoredLocale(v) {\n    return cookies.set(\"locale\", v);\n  },\n  setStoredToken(v) {\n    return cookies.set(\"token\", v);\n  }\n};\n\n// global.Token = Token;\nexport default Token;\n"]},"metadata":{},"sourceType":"module"}